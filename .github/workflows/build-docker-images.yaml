---
name: Build Docker images

on:
  push:
    branches: [main]
    paths: ["*/Dockerfile"]

jobs:
  define-matrix:
    runs-on: ubuntu-latest
    outputs:
      changed_dirs: ${{ steps.changed_dirs.outputs.dirs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed Dockerfiles
        id: changed_dockerfiles
        uses: tj-actions/changed-files@v46
        with:
          files: |
            */Dockerfile

      - name: Get directory names of changed Dockerfiles
        id: changed_dirs
        run: |
          files="${{ steps.changed_dockerfiles.outputs.all_changed_files }}"
          dirs=$(echo "$files" | xargs -n1 dirname | sort -u | jq -R . | jq -s .)
          echo "dirs=$dirs" >> "$GITHUB_OUTPUT"

  build-matrix:
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        dir: ${{ fromJSON(needs.define-matrix.outputs.changed_dirs) }}
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract base image tag from Dockerfile
        id: base_image_tag
        run: |
          tag=$(grep '^FROM' "${{ matrix.dir }}/Dockerfile" | head -n1 | awk -F'[:@]' '{print $2}')
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.actor }}/${{ matrix.dir }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.base_image_tag.outputs.tag }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.dir }}
          file: ${{ matrix.dir }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ghcr.io/${{ github.actor }}/${{ matrix.dir }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
